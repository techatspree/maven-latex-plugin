<?xml version="1.0" encoding="utf-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- coordinates for model and artifact xxx -->
	<modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<groupId>eu.simuline.m2latex</groupId>
	<artifactId>latex-maven-plugin</artifactId>
	<version>1.6-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>

	<!--parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent-->

	<!-- information for generating a site -->
	<name>Maven LaTeX Plugin</name>
	<description>
    Automatically create pdf, doc, odt, txt or html documents 
    from LaTeX sources during the Maven site phase
    allowing typical graphic formats native to tex or to the package graphics.
    Also includes bibliography, index and glossary
    and also check for rerun, warnings and under/overfull boxes. 
	</description>

	<url>https://github.com/Reissner/latex-maven-plugin/</url>
	<inceptionYear>2016</inceptionYear>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>


	<organization>
		<name>Simuline Organization (l2r)</name>
		<url>http://www.simuline.eu</url>
	</organization>

	<!--organization>
    <name>akquinet AG</name>
    <url>http://www.akquinet.de</url>
  </organization-->

	<developers>
		<developer>
			<id>cerker</id>
			<name>Carsten Erker</name>
			<email>carsten.erker at akquinet dot de</email>
			<organization>akquinet tech@spree GmbH</organization>
			<organizationUrl>http://www.akquinet.de</organizationUrl>
		</developer>

		<developer>
			<id>hwilming</id>
			<name>Heinz Wilming</name>
			<email>heinz.wilming at akquinet dot de</email>
			<organization>akquinet tech@spree GmbH</organization>
			<organizationUrl>http://www.akquinet.de</organizationUrl>
		</developer>

		<developer>
			<id>ereissner</id>
			<name>Ernst Reissner</name>
			<email>ernst.reissner at simuline dot eu</email>
			<organization>l2r</organization>
			<organizationUrl>https://www.simuline.eu</organizationUrl>
			<timezone>Europe/Berlin</timezone>
			<properties>
				<picUrl>http://www.simuline.eu/Gluck_0001.gif</picUrl>
			</properties>
		</developer>
	</developers>

	<!-- mailingLists></mailingLists-->

	<!-- this is a trial -->
	<pluginRepositories>
		<pluginRepository>
			<id>latex-maven-plugin-repo</id>
			<!--url>http://akquinet.github.com/maven-latex-plugin/maven2/</url-->
			<url>https://www.simuline.eu/RepositoryMaven</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<!-- source repositories: at the moment not needed. -->
	<repositories>
		<!--repository>
      <id>publicRepoAtSimuline</id>
      <url>https://www.simuline.eu/RepositoryMaven</url>
    </repository-->
		<!--repository>
		<id>springRepo</id>
		<url>https://repo.spring.io/plugins-release/</url>
	</repository-->
	</repositories>
	<!-- https://mvnrepository.com/artifact/org.apache.ant/com.springsource.org.apache.tools.ant -->

	<!--scm>
    <connection>
    scm:git:git://github.com/akquinet/latex-maven-plugin.git
    </connection>
    <url>https://github.com/akquinet/latex-maven-plugin</url>
    <developerConnection>
    scm:git:git@github.com:akquinet/latex-maven-plugin.git
    </developerConnection>
    <tag>1.3</tag>
  </scm-->

	<scm>
		<connection>
      scm:git:https://github.com/Reissner/latex-maven-plugin.git
		</connection>
		<developerConnection>
      scm:git:https://github.com/Reissner/latex-maven-plugin.git
		</developerConnection>
		<url>https://github.com/Reissner/latex-maven-plugin</url>
		<tag>latex-maven-plugin-1.3</tag>
	</scm>

	<distributionManagement>		<!-- For authentication see ~/.m2/settings.xml -->
		<site>
			<id>publicSiteAtSimuline</id>
			<url>ftp://www.simuline.eu/public_html/LatexMavenPlugin</url>
		</site>

		<repository>
			<id>publicRepoAtSimuline</id>
			<uniqueVersion>false</uniqueVersion>
			<url>ftp://www.simuline.eu/public_html/RepositoryMaven</url>
		</repository>
	</distributionManagement>


	<mailingLists>
		<!--mailingList>
      <name>latex-maven-plugin Users</name>
      <archive>http://groups.google.com/group/latex-maven-plugin-users</archive>
      <post>latex-maven-plugin-users@googlegroups.com</post>
      <subscribe>latex-maven-plugin-users+subscribe@googlegroups.com</subscribe>
      <unsubscribe>latex-maven-plugin-users+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList-->
	</mailingLists>

	<!--issueManagement>
    <system>Github Issues</system>
    <url>https://github.com/akquinet/latex-maven-plugin/issues</url>
    </issueManagement-->

	<properties>
		<!-- Using platform encoding to copy filtered resources; 
    without project.build.sourceEncoding the build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- checked during validation -->
		<versionMvn>3.8.4</versionMvn>		<!-- 3.8.4 3.1.0-->
		<versionJunit5>5.8.2</versionJunit5>
		<!--versionJunit5Platform>5.8.2</versionJunit5Platform-->
		<versionJunit4>4.12</versionJunit4>
		<versionItf>0.11.0</versionItf>
		<versionAnt>1.10.0</versionAnt>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${versionMvn}</version>
			<scope>provided</scope>
		</dependency>

		<!-- TBD: lot of dependency convergence errors, 
	mainly betwen maven-compat and maven-core. 	
	I wrote already org.eclipse.sisu:org.eclipse.sisu.plexus:0.3.5
		to update dependency 
		-org.codehaus.plexus:plexus-component-annotations:1.5.5->2.1.0
		Then maven-compat can update to new sisu and a lot is resolved. 

		- maven-compat may update maven-resolver-impl to obtain 
		  org.slf4j:slf4j-api:1.7.30->1.7.32
		- maven-compat shall fix double dependency plexus-utils 3.4.1 and 3.0.24 
		  besides 3.3.0
		
-->

		<dependency>			<!-- needed for integration test -->
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-compat</artifactId>
			<version>${versionMvn}</version>
			<scope>provided</scope>
		</dependency>

		<!-- needed for maven-plugin-plugin descriptor -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>${versionMvn}</version>
			<scope>provided</scope>
		</dependency>

		<!--dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>${versionMvn}</version>
      <scope>provided</scope>
    </dependency-->

		<!-- maven-resolver-api. -->


		<!-- for a trial in MetaInfo class -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${versionMvn}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>			<!-- needed when running the integration test -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.32</version>
			<scope>test</scope>
		</dependency>


		<!-- dependencies to annotations -->
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>3.6.4</version>
			<scope>provided</scope>
		</dependency>

		<!-- version maybe outdated -->
		<!--dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-ant-tasks</artifactId>
      <version>2.1.3</version>
      <scope>provided</scope>
    </dependency-->

		<!-- TBD: this is a bit too much, but works. surrogat of maven-ant-task -->
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>${versionAnt}</version>
			<scope>provided</scope>
		</dependency>

		<!--dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <version>2.2.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <version>2.2.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.2.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <version>2.2.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <version>2.2.1</version>
      <scope>provided</scope>
    </dependency-->


		<!--dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.4</version>
        </dependency-->
		<!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->

		<!--dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.3.0</version>
    </dependency-->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${versionJunit4}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.3.0 </version>			<!-- 2.3.0 works with plugin-plugin 3.3 -->
			<!--version>4.5.1</version does not work with plugin-plugin -->
			<!-- DANGEROUS: warning illegal reflective access caused by this old version -->
		</dependency>

		<!-- maybe to be replaced by https://blog.soebes.de/blog/2020/08/18/itf-part-i/ -->
		<dependency>
			<groupId>org.apache.maven.plugin-testing</groupId>
			<artifactId>maven-plugin-testing-harness</artifactId>
			<version>3.3.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>			<!-- TBD: eliminate in java12 -->
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
			<scope>test</scope>
		</dependency>

		<!--dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-engine</artifactId>
		<version>${versionJunit5}</version>
		<scope>test</scope>
	</dependency-->

		<!-- annotations and assertions -->
		<!--dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-api</artifactId>
		<version>${versionJunit5}</version>
		<scope>test</scope>
	</dependency-->

		<!-- @suite support -->
		<!--dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter-params</artifactId>
		<version>${versionJunit5}</version>
		<scope>test</scope>
	</dependency-->

		<!-- support for parametrized tests -->
		<!--dependency>
		<groupId>org.junit.platform</groupId>
		<artifactId>junit-platform-suite</artifactId>
		<version>${versionJunit5Platform}</version>
		<scope>test</scope>
	</dependency-->

		<!--dependency>
		<groupId>com.soebes.itf.jupiter.extension</groupId>
		<artifactId>itf-extension-maven</artifactId>
		<version>${versionItf}</version>
		<scope>test</scope>
	  </dependency-->

		<!--dependency>
		<groupId>com.soebes.itf.jupiter.extension</groupId>
		<artifactId>itf-assertj</artifactId>
		<version>${versionItf}</version>
		<scope>test</scope>
	</dependency-->

		<!--dependency>
		<groupId>com.soebes.itf.jupiter.extension</groupId>
		<artifactId>itf-jupiter-extension</artifactId>
		<version>${versionItf}</version>
		<scope>test</scope>
	</dependency-->

		<!--dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
		<version>3.16.1</version>
		<scope>test</scope>
	</dependency-->

	</dependencies>

	<build>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.3.2</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-file</artifactId>
				<version>3.3.2</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-http</artifactId>
				<version>3.3.2</version>
			</extension>
		</extensions>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>COPYING</include>
					<include>version.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>


		<plugins>
			<!-- at the moment just to enforce maven version
	   use as mvn validate not as mvn enforcer:enforce
	   TBD: add a lot of tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<phase>validate</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<version>${versionMvn}</version>
							<message>
		 		Invalid Maven version. It should, at least, be ${versionMvn}
							</message>
						</requireMavenVersion>
						<requireJavaVersion>
							<version>11</version>
						</requireJavaVersion>
						<!--dependencyConvergence/-->						<!-- this fails because of plugin-api -->
					</rules>
				</configuration>
			</plugin>

			<!-- information about a project or the system -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>

			<!-- read/write property values -->
			<!-- in this case, this plugin also exposes profile properties from settings.xml
      related with gpg: gpg.executable and gpg.passwprase. 
      This makes it unuseable. 
      What would be needed is make it configurable to include/exclude properites. 
      On the other hand, development shows low level of activity, 
      feature requests are not worked on, 
      but pull requests are done. 
      So if i want to do it myself, i can. Well... 
      For the moment, I decided to drop this and go with resources plugin.  -->
			<!--  
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>
                ${project.build.outputDirectory}/mvn.properties
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->

			<!-- used to create version without SNAPSHOT suffix for documentation -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<propertiesEncoding>UTF-8</propertiesEncoding>
				</configuration>
				<executions>
					<execution>
						<!-- filter the build parameters for tex documents  -->
						<id>filterTexProps</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/site/tex</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/buildParams4tex</directory>
									<includes>
										<include>buildParams.tex</include>
									</includes>
									<!--excludes>
										<exclude>docsCmp/**/*.pdf</exclude>
									</excludes-->
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
	<!-- filter the pom for integration tests -->
	<id>filterIntTestPoms</id>
	<phase>validate</phase>
	<goals>
		<goal>copy-resources</goal>
	</goals>
	<configuration>
		<outputDirectory>src/test/resources/integration</outputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources/rawPoms</directory>
				<includes>
					<include>pom4pdf.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
	</configuration>
</execution>
<execution>
	<id>copy-pdf2site</id>
	<phase>pre-site</phase>
	<goals>
		<goal>copy-resources</goal>
	</goals>
	<configuration>
<outputDirectory>${project.build.outputDirectory}</outputDirectory>
<resources>
	<resource>
		<directory>src/main/resources/docsCmp</directory>
		<filtering>false</filtering>
	</resource>
</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.3</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
					</generateGitPropertiesFilename>
					<!--  includeOnlyProperties>
	       <includeOnlyProperty>^git.build.(time|version)$
	       </includeOnlyProperty>
	       <includeOnlyProperty>^git.commit.id.(abbrev|full)$
	       </includeOnlyProperty>
	       </includeOnlyProperties-->
					<commitIdGenerationMode>full</commitIdGenerationMode>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>

			<!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.12.1</version>
        <executions>
          <execution>
            <id>check-changes</id>
            <phase>verify</phase>
            <goals>
              <goal>changes-check</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->


			<!-- configuration for clean plugin -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/site/tex</directory>
							<includes>
								<include>buildParams.tex</include>
							</includes>
						</fileset>
						<fileset>
							<directory>src/test/resources/integration</directory>
							<includes>
								<include>pom4pdf.xml</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- This plugin will write properties values 
	   using dependency information into classpath.txt-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<?m2e execute onConfiguration,onIncremental?>
						<goals>
							<goal>build-classpath</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputFile>${project.build.directory}/classpath.txt</outputFile>
				</configuration>
			</plugin>


			<!-- creates HelpMojo 
	   Still there is a problem with detail=true. 
	   Does not work with 3.4 or later versions! 
      -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<!--version>3.4</version-->
				<!-- this is the first version with a NullPointerException -->
				<!--version>3.6.4</version-->
				<!-- this is the current version at the time of this writing -->
				<version>3.3</version>				<!-- 3.3 newest currently: 3.6.1-->
				<!-- this version allows installation, but fails with javadoc -->
				<configuration>
					<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
				</configuration>

				<executions>
					<execution>
						<?m2e execute onConfiguration,onIncremental?>
						<id>default-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
						<phase>process-classes</phase>
					</execution>
					<!--execution>
            <id>generated-helpmojo</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
 	    <phase>process-classes</phase>
         </execution-->
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<compilerArgs>
						<arg>-g</arg>
						<arg>-Xlint:unchecked</arg>
					</compilerArgs>
					<source>1.8</source>
					<target>1.8</target>
					<!--release>11</release-->
				</configuration>
			</plugin>

			<!-- maybe three jars even: one each for 
	   - maven plugin 
	   - ant task
	   - standalone application 
      -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<!--version>3.0.2</version-->
				<executions>
					<execution>
						<id>second-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>antTask</classifier>
							<includes>
								<include>**/antTask/*</include>								<!-- this is added to the name
		of the jar file-->
								<include>**/core/*</include>
								<include>org/apache/maven/plugin/*Exception*</include>
								<include>org/apache/commons/io/*</include>
								<include>org/apache/commons/io/output/*</include>
								<include>org/apache/commons/io/filefilter/*</include>
								<include>org/codehaus/plexus/util/*</include>
								<include>org/codehaus/plexus/util/cli/*</include>
								<include>org/codehaus/plexus/util/cli/shell/*</include>
								<include>*.properties</include>
							</includes>
						</configuration>
					</execution>
				</executions>
				<!-- refers to all jars -->
				<configuration>
					<archive>
						<!-- name of jar and list of folders if set true -->
						<!-- index>true</index-->
						<manifest>
							<!-- adds all 'Implementation-xxx' 
		   but "Implementation-Vendor-Id' -->
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
							<!-- adds all 'Specification-xxx' 
		   but "Implementation-Vendor-Id' -->
							<addDefaultSpecificationEntries>true
							</addDefaultSpecificationEntries>
							<!-- make jar executable for standalone application -->
							<!--addClasspath>true</addClasspath-->
							<!--classpathPrefix>lib/</classpathPrefix-->
							<!--classpathLayoutType>repository</classpathLayoutType-->
							<!--customClasspathLayout>WEB-INF/lib/$${artifact.groupIdPath}/$${artifact.artifactId}-$${artifact.version}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout-->

							<!--mainClass>the main class</mainClass-->
						</manifest>
						<!-- 'sealed' means all packages are complete in this jar-->
						<manifestEntries>
							<Sealed>true</Sealed>
							<url>${project.url}</url>
						</manifestEntries>
						<manifestSections>
							<manifestSection>
								<name>eu/simuline/m2latex/core/</name>
								<manifestEntries>
									<Implementation-Version>${project.version}</Implementation-Version>
									<url>${project.url}</url>
								</manifestEntries>
							</manifestSection>
						</manifestSections>
					</archive>
				</configuration>

			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M2</version>
			</plugin>

			<!-- javadoc plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<breakiterator>true</breakiterator>
					<show>private</show>
					<source>11</source>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<argline>-X</argline>
					<trimStackTrace>false</trimStackTrace>
					<systemPropertyVariables>
						<!--testResourcesDir>${project.testResources}</testResourcesDir-->
						<unitTestResourcesDir>src/test/resources/units</unitTestResourcesDir>
						<buildDirectory>${project.build.directory}</buildDirectory>
					</systemPropertyVariables>
					<!--includes>
			<include>LatexProcessorTest.java</include>
			<include>CommandExecutorTest.java</include>
			<include>TexFileUtilsTest.java</include>
			<include>SettingsTest.java</include>
			<include>PdfMojoTest.java</include>
          </includes-->
					<!--excludes>
            <exclude>PdfMojoTest.java</exclude>
          </excludes-->
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
				<configuration>
					<locales>en</locales>
				</configuration>
			</plugin>

			<!-- create html and pdf and other formats from latex -->
			<!-- this is activated for developer tests only -->
			<!--plugin>
				<groupId>eu.simuline.m2latex</groupId>
				<artifactId>latex-maven-plugin</artifactId>
				<version>1.5-SNAPSHOT</version>	

				<configuration>
					<settings>
					</settings>	
				</configuration>
				<executions>
					<execution>
						<id>process-latex-sources-pdf</id>
						<goals>
							<goal>pdf</goal>
						</goals>
					</execution>

					<execution>
						<id>process-latex-sources</id>
						<goals>
							<goal>cfg</goal>
						</goals>
					</execution>
					<execution>
						<id>clear-latex-sources</id>
						<goals>
							<goal>clr</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-converters</id>
						<goals>
							<goal>vrs</goal>
						</goals>
						<configuration>
							<versionsWarnOnly>true</versionsWarnOnly>
						</configuration>
					</execution>

				</executions>

			</plugin-->
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>


			<!-- offers also command line analysis:
      mvn versions:display-plugin-updates
      mvn versions:display-dependency-updates
      mvn versions:display-property-updates
      -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<!-- TBD: uniform version -->
				<version>2.9.0</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M5</version>
				<reportSets />
			</plugin>
			<!--plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.7</version>
          </plugin-->

			<!-- changes plugin: src/changes/changes.xml -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.12.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>



		</plugins>
	</reporting>

</project>
